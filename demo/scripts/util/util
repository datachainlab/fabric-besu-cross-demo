#!/usr/bin/env bash

set -eu

CUR_DIR=$(cd $(dirname ${BASH_SOURCE:-$0}); pwd)
source ${CUR_DIR}/erc721-util
source ${CUR_DIR}/erc20-util
source ${CUR_DIR}/relayer-util

function debugMode() {
  if [ -n "${1+x}" ] && [ "$1" = "--debug" ]; then
  set -x
  fi
}

LATEST_RESULT=""

function print() {
  local cmd=$1
  local display=$2

  echo "[$(date "+%Y/%m/%d %H:%M:%S")] $cmd" | awk \
  -v cli1="${ERC721CLI_PLATFORMER}" \
  -v cli2="${ERC721CLI_ORGB}" \
  -v cli3="${ERC721CLI_ORGA}" \
  -v cli4="${ERC721CLI_INVALID_USER}" \
  -v cli5="${ERC20CLI_ORGA}" \
  -v cli6="${ERC20CLI_ORGB}" \
  -v cli7="${ERC20CLI_PLATFORMER}" \
  -v cli8="${RLY}" \
  -v disp="$display" \
  '{ sub(cli1, disp); sub(cli2, disp); sub(cli3, disp); sub(cli4, disp); sub(cli5, disp); sub(cli6, disp); sub(cli7, disp); sub(cli8, disp); print $0}'
  local res
  local status=0
  res="$($cmd)" || status=$?
  LATEST_RESULT=${res##*$'\n'}
  if test $status -eq 0; then
    successln "${res##*$'\n'}"
  else
    errorln "${res}"
  fi
  return $status
}

function printERC721() {
  print "$1" erc721cli
}

function printERC20() {
  print "$1" erc20cli
}

function printRelay() {
  print "$1" uly
}

function isCommit() {
  if [[ $1 == *"COORDINATOR_DECISION_COMMIT"* ]]; then
    successln "SUCCESS: Tx $2 is commited"
  else
    errorln "FAIL: Tx $2 is not commited"
    return 1
  fi
}

function isAbort() {
  if [[ $1 == *"COORDINATOR_DECISION_ABORT"* ]]; then
    successln "SUCCESS: Tx $2 is aborted"
  else
    errorln "FAIL: Tx $2 is not aborted"
    return 1
  fi
}

function assertEqual() {
  local actual=$1
  local expected=$2
  local message=$3
  if [ "$1" = "$2" ]; then
    successln "SUCCESS: $3"
  else
    errorln "FAIL: expected $2 but actual $1"
    return 1
  fi
}

function waitSuccess() {
  local cmd=$1
  local try_count=$2
  local res
  local status=0
  set +e
  for i in $(seq $try_count); do
    res="$($cmd 2>&1)"
    status=$?
    if [ $status -eq 0 ]; then
      set -e
      successln "Event detected: ${res##*$'\n'}"
      break
    fi
    sleep 5
  done
  set -e
  return $status
}
